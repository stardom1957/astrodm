Help on module astrodm.doublesOutils in astrodm:

NAME
    astrodm.doublesOutils

DESCRIPTION
    Created on Mon Nov 23 16:35:23 2020
    version 37
    Cette version est incompatibles avec les observations faites avec le Microguide
    
    @author: Dominique Martel
    
    Comprend diverses fonctionnalités pour planifier, réduire les observations
    à partir des données d'acquisition d'étoiles doubles et de pré-réduction
    produites par le logiciel REDUC (de Florent Losse) et produit également
    diverses listes.

CLASSES
    builtins.object
        Acquisition
            AcquisitionEchelle
            AcquisitionPosition
            AcquisitionSeparation
        Bloc
        DoubleSessions
        Observation
        Reduction
            ReductionComplete
            ReductionEchelle
        Systeme
    
    class Acquisition(builtins.object)
     |  La classe Acquisition contient les données d'acquisition pour un bloc
     |  d'observation. Cette classe contient les données communes au trois types
     |  de mesures (typeMesure) 'pos' et 'sep' et 'ech' utilisées dans les deux types
     |  de réductions (typeObservation) 'ech' et 'complete'.
     |  
     |  Methods defined here:
     |  
     |  __init__(self)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
    
    class AcquisitionEchelle(Acquisition)
     |  AcquisitionEchelle(typeMesure)
     |  
     |  La classe AcquisitionEchelle étend la classe Acquisition avec ...
     |  
     |  Method resolution order:
     |      AcquisitionEchelle
     |      Acquisition
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(self, typeMesure)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from Acquisition:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
    
    class AcquisitionPosition(Acquisition)
     |  AcquisitionPosition(typeMesure)
     |  
     |  La classe AcquisitionPosition étend la classe Acquisition avec ...
     |  
     |  Method resolution order:
     |      AcquisitionPosition
     |      Acquisition
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(self, typeMesure)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from Acquisition:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
    
    class AcquisitionSeparation(Acquisition)
     |  AcquisitionSeparation(typeMesure)
     |  
     |  La classe AcquisitionSeparation étend la classe Acquisition avec ...
     |  
     |  Method resolution order:
     |      AcquisitionSeparation
     |      Acquisition
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(self, typeMesure)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from Acquisition:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
    
    class Bloc(builtins.object)
     |  Bloc(noBloc, typeObservation)
     |  
     |  La classe Bloc ...
     |  
     |  Methods defined here:
     |  
     |  __init__(self, noBloc, typeObservation)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  validations(self, nsession)
     |      Valide les ...
     |      
     |      Parameters
     |      ----------
     |       int nsession numéro de la session en cour
     |      
     |      Returns
     |      -------
     |      rien
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
    
    class DoubleSessions(builtins.object)
     |  DoubleSessions(typeObs='complete', chProg='')
     |  
     |  La classe DoubleSession contient la structure de données entière des
     |  session d'observations (N=1, 2 ...) et de leurs blocs pour le système
     |  et la paire concernés pour le programme d'observation.
     |  
     |  Methods defined here:
     |  
     |  __init__(self, typeObs='complete', chProg='')
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  calcule_moyennes_sessions(self)
     |      Produit un rapport concis à partir de self.observations_df  dans
     |      sommaire_obs_df.
     |      
     |      sommaire_obs_df sera utilisé pour le sommaire final des 
     |      observations aussi bien dans le Jupyter notebook des observations que dans 
     |      le module listeReductions.
     |      
     |      Parameters
     |      ----------
     |       aucun    
     |      
     |      Returns
     |      -------
     |       rien
     |  
     |  cree_observations_df(self)
     |      Cette méthode crée le pd.dataframe observations_df qui contient le
     |      détail de toutes les observations.
     |      
     |      Parameters
     |      ----------
     |       aucun    
     |      
     |      Returns
     |      -------
     |       rien
     |  
     |  hier(self, sortie='terminal')
     |      Méthode qui liste la hiérarchie complète de l'objet DoubleSessions (self)
     |      
     |      Parameters
     |      ----------
     |       String sortie
     |        par défaut dans terminal, sinon
     |        liste dans ./out.txt (avec écrasement du contenu si fichier présent)
     |      
     |      Returns
     |      -------
     |       Hiérarchie complète de l'objet DoubleSessions (self).
     |  
     |  imprimeRapport(self, typeRapport='m')
     |      La méthode rapport ...
     |      
     |      Parameters
     |      ----------
     |       DoubleSessions ses
     |       String typeRapport
     |         l : listes
     |         c : données complète des sessions
     |         m : moyennes des sessions
     |      
     |      Returns
     |      -------
     |       rien
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
    
    class Observation(builtins.object)
     |  Observation(noObs, typeObservation)
     |  
     |  La classe Observations ... 
     |  noObs :: no de l'observation (N dans les rapports et structures)
     |  nbrBlocs :: nombre de blocs d'observations
     |  typeObservation :: 'ech' Échelle, ou 'complete' Complète (typeMesure 'pos' ou séparation 'sep')
     |  
     |  Methods defined here:
     |  
     |  __init__(self, noObs, typeObservation)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ajouteBloc(self, no_bloc, type_obs)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
    
    class Reduction(builtins.object)
     |  La classe Reduction contient les données de base d'une réduction.
     |  
     |  Methods defined here:
     |  
     |  __init__(self)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  relecture_mes_brutes(self, ncfmb)
     |      Lecture des mesures brutes à partir de fich_mesures_brutes dans un df.
     |      
     |      Parameters
     |      ----------
     |       chemin String ncfmb nom complet fichier mesures brutes
     |      
     |      Returns
     |      -------
     |       Un Pandas df des mesures brutes
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
    
    class ReductionComplete(Reduction)
     |  La classe ReductionComplete contient les données de base d'une réduction complète.
     |  
     |  Method resolution order:
     |      ReductionComplete
     |      Reduction
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(self)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  calcule_rho(self, noN, noB)
     |      À partir de reduc_brute_df calcule la distance entre chaque point et
     |      produit les statistiques descriptives des données.
     |      
     |      Parameters
     |      ----------
     |       int noN numéro de la session en cour
     |       int noB no du bloc en cour
     |      
     |      Returns
     |      -------
     |      rien
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from Reduction:
     |  
     |  relecture_mes_brutes(self, ncfmb)
     |      Lecture des mesures brutes à partir de fich_mesures_brutes dans un df.
     |      
     |      Parameters
     |      ----------
     |       chemin String ncfmb nom complet fichier mesures brutes
     |      
     |      Returns
     |      -------
     |       Un Pandas df des mesures brutes
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from Reduction:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
    
    class ReductionEchelle(Reduction)
     |  La classe ReductionEchelle contient les données de base d'une réduction d'échelle.
     |  
     |  Method resolution order:
     |      ReductionEchelle
     |      Reduction
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(self)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  calcule_E(self)
     |      À partir de reduc_brute_df calcule la distance entre chaque point et
     |      produit les statistiques descriptives des données.
     |      
     |      Parameters
     |      ----------
     |       aucun
     |      
     |      Returns
     |      -------
     |      rien
     |  
     |  calcule_Z(self, a, b, c, d)
     |      À partir des caractéristiques du masque et du filtres qui se trouvent dans les
     |      info_masque_df et info_filtre_df, calcule Z et Z_sigma.
     |      
     |      Parameters
     |      ----------
     |       a = LfplusDf
     |       b = LfplusDf_sigma
     |       c = Lo
     |       d = Lo_sigma
     |      
     |      Returns
     |      -------
     |       rien
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from Reduction:
     |  
     |  relecture_mes_brutes(self, ncfmb)
     |      Lecture des mesures brutes à partir de fich_mesures_brutes dans un df.
     |      
     |      Parameters
     |      ----------
     |       chemin String ncfmb nom complet fichier mesures brutes
     |      
     |      Returns
     |      -------
     |       Un Pandas df des mesures brutes
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from Reduction:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
    
    class Systeme(builtins.object)
     |  Systeme(chemin_systeme='', nom_systeme_WDS='', id_sys_alt1='', id_sys_alt2='', remarques='')
     |  
     |  Structure des informations d'un système d'étoiles doubles ou multiples.
     |  
     |  Un objet Systeme contient les informations de base d'un système. La
     |  méthode __init__ prend en charge le chemin d'un dossier contenant une
     |  fichier csv contenant les informations du système, ou le nom du
     |  système, ou une série de paramètres avec les attributs requis pour le
     |  système. Dans tous cas, certains attributs sont renseignés par une 
     |  recherche astroquery dans le WDS et par diverses méthodes des packages
     |  astropy et astroplan.
     |  
     |  Methods defined here:
     |  
     |  __init__(self, chemin_systeme='', nom_systeme_WDS='', id_sys_alt1='', id_sys_alt2='', remarques='')
     |      Création d'un objet Systeme.
     |      
     |      Paramètres :
     |          String chemin_systeme :: nom complet du fichier info_système.
     |          String nom_systeme_WDS :: id WDS du système (non normalisé).
     |          Dict dict_systeme :: un dictionnaire contenant tous les
     |           attributs du système.
     |           
     |          String id_src_alt1 nom alternatif 1
     |          String id_src_alt2 nom alternatif 2
     |          String Remarques
     |  
     |  normalise_attributs_chaines(self)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)

FUNCTIONS
    calcule_rho_theta_moy()
        En vue du calcul de la séparation des étoiles, à partir de reduc_brute_df,
        calcule la distance entre chaque point et produit les statistiques descriptives des données.
        
        Parameters
        ----------
         aucun
        
        Returns
        -------
        rien
    
    convertToFloat(strVal)
    
    creeDateHeureLocale(dhl)
        Convertir dhl en un objet datetime UTC aware.
        
        Parameters
        ----------
        dhl date au format iso par ex. '2020-11-08T23:48:00UTC-4'
        
        Returns
        -------
        objet datetime
    
    creeLstObjObservations(typeObs, cheminProgramme, nomSysteme=None)
        Crée l'objet Observations du type typeObs en parcourant chemin.
        
        Parameters
        ----------
         String typeObs
         String chemin chemin complet ...
         Systeme systeme
        
        Returns
        -------
         List() doublesOutils.Observation avec toutes les données pertinentes des blocs d'observations
         trouvés dans chemin.
         
         Int nombreDeN le nombre de répertoires N valides
    
    diff_dt(dt1, dt2)
        retourne la différence absolue (intervalle) entre dt1 et dt2 en J.jj.
        
        Parameters
        ----------
         astropy.time.core.Time dt1
         astropy.time.core.Time dt2 ou;
         
         str dt1 (format isot)
         str dt2 (format isot)
        
        Returns
        -------
         différence entre dt2 et dt1
    
    dt_isot_a_datetime(date_isot)
        Convertir date_isot en un objet datetime (UTC).
        
        Parameters
        ----------
        date_isot date au format isot par ex. '2020-11-08T23:48:00'
        
        Returns
        -------
        objet datetime
    
    extrait_Log_acq_env(obs, bloc, typeMesure)
        Pour le bloc courant, repère les fichiers .ncfa (acquisition) et ncfr (réduction) 
        et récupère diverses données dépendant du type de réduction ('ech' ou 'complete')
        et du types de mesure ('ech', 'sep' ou 'pos'). Également, le fichier environnement.txt
        .ncfle est lu et traité.
        
        S'il sagit d'une réduction d'échelle ('ech'), on en profite pour récupérer id_masque
        et id_filtre qui se trouvent dans environnement.txt.
        
        Les données sont colligées dans les objets Acquisition appropriés de l'objet Observation
        passé en paramètre.
        
        Note : dans le cas d'une réduction d'échelle ('ech') le type de mesure (.typeMesure) est
        toujours 'sep', N==1 et bloc==1.
        
        
        Parameters
        ----------
         obs : objet de classe Observation
         bloc : no du bloc traité
         typeMesure : 'pos' ou 'sep'
        
        Returns
        -------
         rien, mais les données se trouvent dans l'objet Observation passé en paramètre.
    
    extrait_mesure_brutes_logReduc(obs, noBloc, typeMesure)
        Pour le bloc courant, repère le fichier Rlog*.txt produit par reduc et extrait les mesures
        brutes de la réduction dans un nouveau fichier csv.
        
        Les données sont colligées dans les objets Reduction appropriés de l'objet Observation
        passé en paramètre.
        
        Note : dans le cas d'une réduction d'échelle ('ech') le type de mesure (.typeMesure) est
        toujours 'sep', N==1 et noBloc==1.
        
        
        Parameters
        ----------
         obs : objet de classe Observation
         noBloc : no du bloc traité
         typeMesure : 'pos' ou 'sep'
        
        Returns
        -------
         Produit le fichier reduc_brut.csv dans le répertoire de réduction.
    
    imprime_rapport_C(sessions)
    
    imprime_rapport_E(obs)
        Imprime rapport
    
    info_src_wds(src, paire, notes=True)
        Fonction de recherche qui imprime les résultats de recherche dans le catalogue
        WDS.
        
        Parameters
        ----------
        src : TYPE src
            La désignation de découvreur du système recherché.
        paire : TYPE
            La paire, sous la forme 'ab', 'a,bc', etc ou '*' si toutes les paires
            sont recherchées.
        notes : TYPE, bool, optional
            True :: recherche et imprime les notes si présentent au catalogue
            'B/wds/notes'.
            La valeur par défaut est True.
        
        Returns
        -------
        None. Impression des résultats.
    
    lireFichiersSupport(typeObservation, ch)
        Lecture des fichiers maîtres de calibration,
        lecture fichiers filtres et masques si typeObservation 'ech',
        lecture fichier des observatoires
    
    lire_fichier_observatoires()
    
    liste_blocs(ch)
        Parcourt ch et retourne la liste des bnn (chemins des rép des bloc d'observations)
        
        Parameters
        ----------
         ch chemin complet à parcourir
        
        Returns
        -------
         Une liste des chemins des répertoires des blocs d'observations.
    
    maj_master_calibrations(data)
        Met à jour le fichier maître des calibrations.
            
        master_calibrations_e.csv est modifié uniquement dans le cadre de ce programme. Si index_cal_e
        existe déjà dans master_calibrations_e.csv, il s'agit d'une nouvelles réduction effectuée de nouveau
        avec les mêmes données de réduction produites par REDUC (donc un simple cas de double exécution). Afin de 
        permettre de refaire une réduction au besoin, il faut présenter l'usager avec les résultats de la présente
        réduction en même temps que celle trouvée dans master_calibrations_e.csv le même index_cal_e. L'usager
        devra alors décider laquelle des deux réductions il désire garder.
        
        Parameters
        ----------
         data : objet Acquisition
         
         Lecture du fichier cal_e\master_calibration.csv
        
        Returns
        -------
         Modifie le fichier maître des calibrations
    
    norm_WDS_src(source)
        normaliser src avec un seul espace entre découvreur et no ssi len < 7
        
        Parameters
        ----------
        source : TYPE str
            La désignation de découvreur du système recherché.
        
        Returns
        -------
        TYPE string désignation normalisée.
    
    norm_WDS_src_notes(source)
        Normalise source sur 7 caractères.
        
        Parameters
        ----------
        source : TYPE str
            La désignation de découvreur du système recherché.
        
        Returns
        -------
        TYPE string désignation normalisée sur WDS_SRC_LEN_NOTES.
    
    rech_wds(src, paire)
        Recherche les informations de src et paire au catalogue WDS ('B/wds/wds').
        
        Parameters
        ----------
        src : TYPE str
            La désignation de découvreur du système (source) recherché.
        paire : str
            La paire, sous la forme 'ab', 'a,bc', etc ou '*' si toutes les paires
            sont recherchées.
        
        Returns
        -------
        TYPE astroquery.utils.commons.TableList
            Le résultat de la recherche sous la forme d'une table.
    
    rech_wds_notes(src)
        Recherche les notes au sujet de src dans les notes au WDS ('B/wds/notes'), si présentes.
        
        Parameters
        ----------
        src : TYPE str
            La désignation de découvreur du système recherché.
        
        Returns
        -------
        TYPE astroquery.utils.commons.TableList
            Il s'agit d'une table des résultats.
    
    reduction(type_observation, cheminDeTeteProgramme)
        Effectue la réduction appropriée selon le type d'observation et le chemin
        passés en paramètres.
        
        Parameters
        ----------
         String type_observation
           'ech' == échelle
           'complete' == complète
         String cheminDeTeteProgramme
        
        Returns
        -------
         Retourne objet Observations ou DoubleSessions selon le cas
    
    regle_env_exec(modei=False, impre=False, imprd=False, imprs=False)
        Règles environement des variables bool pour exécution.
        
        Parameters
        ----------
        modei : TYPE, optional
            DESCRIPTION. mode interactif The default is False.
        impre : TYPE, optional
            DESCRIPTION. The default is False.
        imprd : TYPE, optional
            DESCRIPTION. The default is False.
        imprs : TYPE, optional
            DESCRIPTION. The default is False.
        
        Returns
        -------
        None.
    
    str_dh_a_str_isot(d, h)
        Produit une chaîne Time au format isot de astropy avec d et h
        Toutes les dates en UTC
        
        Parameters
        ----------
         string d date au format yyyymmdd
         string h heure au format hhmmss.sss
        
        Returns
        -------
         String date au format isot de astropy p. ex. «2021-10-08T22:22:31.258»
    
    str_dt_isot_a_TimeIsot(date='', heure='', dt=None)
        Convertit date et heure UTC au format Time isot UTC.
        
        Parameters
        ----------
        String date au format 'aaaammjj'
        String heure au format 'hhmmss.sss'
        String dt isot
        
        Returns
        -------
         Un objet astropy.time.core.Time
    
    trouverLogReduc(ch)
        Trouve le fichier log de réduction (REDUC) RLog_*.txt dans ch
        
        Parameters
        ----------
         ch chemin complet à parcourir
        
        Returns
        -------
         Le nom complet du log de réduction.
    
    trouverLogsAetE(chemin, nomSysteme)
        Trouve le fichier log d'acquisition (txt) et environnement dans chemin
        
        Parameters
        ----------
         chemin String chemin complet à parcourir
         ns String nom du système (ex. 'STTA254')
        
        Returns
        -------
         Tuple : nom complet log d'acquition, nom complet fichier environnement
    
    valide_nom_systeme(chaine)
        Valide silencieusement si chaine est un nom de système et existe bien dans
        le WDS.
        
        Parameters
        ----------
        STRING chaine :
            chaîne à valider.
        
        Returns
        -------
        boolean
    
    version()
        # %% FONCTIONS

DATA
    DELTA_TEMPERATURE = 3
    NL = '\n'
    TEMPS_ENTRE_ACQUISITIONS = 120
    WDS_SRC_ESPACE_LEN = 1
    WDS_SRC_LEN_NOTES = 7
    codes_etat_obs_dict = {'..I': ['mesure par interférométrie des tavelur...
    fich_mesures_brutes = 'mesures_brutes.csv'
    no_version = 37
    nom_fich_m_cal = 'master_calibrations_e.csv'
    nom_fich_m_filtres = 'master_filtres_cal.csv'
    nom_fich_m_masques = 'master_masques_cal.csv'
    root = <tkinter.Tk object .>
    t_format = 'isot'
    t_scale = 'utc'
    v = <astroquery.vizier.core.VizierClass object>

FILE
    d:\documents\astronomie\dev\astrodm\doublesoutils.py


None
